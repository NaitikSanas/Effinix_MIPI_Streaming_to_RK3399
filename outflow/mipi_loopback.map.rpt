Synthesis report for project mipi_loopback
Generated at: Aug 06, 2022 12:35:08
Copyright (C) 2013 - 2021 Efinix Inc. All rights reserved.

### ### ### ### ### ### ### ### ### ### ### ### ### ### ###

Top-level Entity Name : mipi_loopback_top
### ### File List (begin) ### ### ###
D:/MIPI_Loopback\debug_top.v (verilog_2k)
D:/MIPI_Loopback\fifo.v (verilog_2k)
D:/MIPI_Loopback\video_gen.v (verilog_2k)
D:/MIPI_Loopback\sw_counter.v (verilog_2k)
D:/MIPI_Loopback\memory.v (verilog_2k)
D:/MIPI_Loopback\mipi_loopback_top.v (verilog_2k)
D:/MIPI_Loopback\true_dual_port _ram.v
D:/MIPI_Loopback\uart.vhd
### ### File List (end) ### ### ###

### ### Pre-optimizations and mapping (begin) ### ### ###

Mapping success.
### ### Mapping (end) ### ### ###

### ### Post-optimizations and re-synthesis (begin) ### ### ###

Post-optimizations and re-synthesis success.
### ### Post-optimizations and re-synthesis (end) ### ### ###

### ### EFX_FF CE enables (begin) ### ### ###
Total number of enable signals: 3
Enable signal <ceg_net1>, number of controlling flip flops: 1
Enable signal <ceg_net10>, number of controlling flip flops: 1
Enable signal <patgen/equal_4/n33>, number of controlling flip flops: 17
### ### EFX_FF CE enables (end) ### ### ###

### ### EFX_FF SR set/reset (begin) ### ### ###
Total number of enable signals: 3
SR signal <patgen/n442>, number of controlling flip flops: 10
SR signal <patgen/n475>, number of controlling flip flops: 9
SR signal <patgen/equal_4/n33>, number of controlling flip flops: 17
### ### EFX_FF SR set/reset (end) ### ### ###

### ### Sequential Elements Trimming Report (begin) ### ### ### 
FF Output: tx_pixel_data[0](=0)
FF Output: tx_pixel_data[1](=0)
FF Output: tx_pixel_data[2](=0)
FF Output: tx_pixel_data[3](=0)
FF Output: tx_pixel_data[4](=0)
FF Output: tx_pixel_data[5](=0)
FF Output: tx_pixel_data[6](=0)
FF Output: tx_pixel_data[7](=0)
FF Output: tx_pixel_data[8](=0)
FF Output: tx_pixel_data[9](=0)
FF Output: tx_pixel_data[10](=0)
FF Output: tx_pixel_data[11](=0)
FF Output: tx_pixel_data[12](=0)
FF Output: tx_pixel_data[13](=0)
FF Output: tx_pixel_data[14](=0)
FF Output: tx_pixel_data[15](=0)
FF Output: tx_pixel_data[16](=0)
FF Output: tx_pixel_data[17](=0)
FF Output: tx_pixel_data[18](=0)
FF Output: tx_pixel_data[19](=0)
FF Output: tx_pixel_data[20](=0)
FF Output: tx_pixel_data[21](=0)
FF Output: tx_pixel_data[22](=0)
FF Output: tx_pixel_data[23](=0)
FF Output: tx_pixel_data[24](=0)
FF Output: tx_pixel_data[25](=0)
FF Output: tx_pixel_data[26](=0)
FF Output: tx_pixel_data[27](=0)
FF Output: tx_pixel_data[28](=0)
FF Output: tx_pixel_data[29](=0)
FF Output: tx_pixel_data[30](=0)
FF Output: tx_pixel_data[31](=0)
FF Output: tx_pixel_data[32](=0)
FF Output: tx_pixel_data[33](=0)
FF Output: tx_pixel_data[34](=0)
FF Output: tx_pixel_data[35](=0)
FF Output: tx_pixel_data[36](=0)
FF Output: tx_pixel_data[37](=0)
FF Output: tx_pixel_data[38](=0)
FF Output: tx_pixel_data[39](=0)
FF Output: tx_pixel_data[40](=0)
FF Output: tx_pixel_data[41](=0)
FF Output: tx_pixel_data[42](=0)
FF Output: tx_pixel_data[43](=0)
FF Output: tx_pixel_data[44](=0)
FF Output: tx_pixel_data[45](=0)
FF Output: tx_pixel_data[46](=0)
FF Output: tx_pixel_data[47](=0)
FF Output: tx_pixel_data[48](=0)
FF Output: tx_pixel_data[49](=0)
FF Output: tx_pixel_data[50](=0)
FF Output: tx_pixel_data[51](=0)
FF Output: tx_pixel_data[52](=0)
FF Output: tx_pixel_data[53](=0)
FF Output: tx_pixel_data[54](=0)
FF Output: tx_pixel_data[55](=0)
FF Output: tx_pixel_data[56](=0)
FF Output: tx_pixel_data[57](=0)
FF Output: tx_pixel_data[58](=0)
FF Output: tx_pixel_data[59](=0)
FF Output: tx_pixel_data[60](=0)
FF Output: tx_pixel_data[61](=0)
FF Output: tx_pixel_data[62](=0)
FF Output: tx_pixel_data[63](=0)
FF Output: uart_txrx/tx_busy(=0)
FF Output: uart_txrx/rx_buffer[9](=0)
FF Output: uart_txrx/tx_buffer[10](=1)
FF Output: uart_txrx/rx_buffer[8](=0)
FF Output: uart_txrx/tx_buffer[9](=1)
FF Output: rx_data[7](=0)
FF Output: uart_txrx/rx_buffer[7](=0)
FF Output: uart_txrx/tx_buffer[8](=1)
FF Output: rx_data[6](=0)
FF Output: uart_txrx/rx_buffer[6](=0)
FF Output: uart_txrx/tx_buffer[7](=1)
FF Output: rx_data[5](=0)
FF Output: uart_txrx/rx_buffer[5](=0)
FF Output: uart_txrx/tx_buffer[6](=1)
FF Output: rx_data[4](=0)
FF Output: uart_txrx/rx_buffer[4](=0)
FF Output: uart_txrx/tx_buffer[5](=1)
FF Output: rx_data[3](=0)
FF Output: uart_txrx/rx_buffer[3](=0)
FF Output: uart_txrx/tx_buffer[4](=1)
FF Output: rx_data[2](=0)
FF Output: uart_txrx/rx_buffer[2](=0)
FF Output: uart_txrx/tx_buffer[3](=1)
FF Output: rx_data[1](=0)
FF Output: uart_txrx/rx_buffer[1](=0)
FF Output: uart_txrx/tx_buffer[2](=1)
FF Output: rx_data[0](=0)
FF Output: uart_txrx/rx_buffer[0](=0)
FF Output: uart_txrx/tx_buffer[1](=1)
FF Output: uart_txrx/tx_buffer[0](=1)
FF instance: pxlword_cnt[0]~FF(unreachable)
FF instance: pxlword_state~FF(unreachable)
FF instance: valid_h_patgen_divided~FF(unreachable)
FF instance: i[0]_2~FF(unreachable)
FF instance: valid_h_patgen_PC~FF(unreachable)
FF instance: sw4_inst/video_pattern[0]~FF(unreachable)
FF instance: sw4_inst/sw_counter[0]_2~FF(unreachable)
FF instance: sw4_inst/video_pattern[1]~FF(unreachable)
FF instance: sw4_inst/sw_counter[1]~FF(unreachable)
FF instance: sw4_inst/sw_counter[2]~FF(unreachable)
FF instance: sw4_inst/sw_counter[3]~FF(unreachable)
FF instance: sw4_inst/sw_counter[4]~FF(unreachable)
FF instance: sw4_inst/sw_counter[5]~FF(unreachable)
FF instance: sw4_inst/sw_counter[6]~FF(unreachable)
FF instance: sw4_inst/sw_counter[7]~FF(unreachable)
FF instance: sw4_inst/sw_counter[8]~FF(unreachable)
FF instance: sw4_inst/sw_counter[9]~FF(unreachable)
FF instance: sw4_inst/sw_counter[10]~FF(unreachable)
FF instance: sw4_inst/sw_counter[11]~FF(unreachable)
FF instance: sw4_inst/sw_counter[12]~FF(unreachable)
FF instance: sw4_inst/sw_counter[13]~FF(unreachable)
FF instance: sw4_inst/sw_counter[14]~FF(unreachable)
FF instance: sw4_inst/sw_counter[15]~FF(unreachable)
FF instance: i[1]~FF(unreachable)
FF instance: i[2]~FF(unreachable)
FF instance: i[3]~FF(unreachable)
FF instance: i[4]~FF(unreachable)
FF instance: i[5]~FF(unreachable)
FF instance: i[6]~FF(unreachable)
FF instance: i[7]~FF(unreachable)
FF instance: i[8]~FF(unreachable)
FF instance: i[9]~FF(unreachable)
FF instance: i[10]~FF(unreachable)
FF instance: i[11]~FF(unreachable)
FF instance: i[12]~FF(unreachable)
FF instance: i[13]~FF(unreachable)
FF instance: i[14]~FF(unreachable)
FF instance: i[15]~FF(unreachable)
FF instance: i[16]~FF(unreachable)
FF instance: i[17]~FF(unreachable)
FF instance: i[18]~FF(unreachable)
FF instance: i[19]~FF(unreachable)
FF instance: i[20]~FF(unreachable)
FF instance: i[21]~FF(unreachable)
FF instance: i[22]~FF(unreachable)
FF instance: i[23]~FF(unreachable)
FF instance: i[24]~FF(unreachable)
FF instance: i[25]~FF(unreachable)
FF instance: uart_txrx/count_baud[0]_2~FF(unreachable)
FF instance: uart_txrx/os_pulse~FF(unreachable)
FF instance: uart_txrx/count_os[0]~FF(unreachable)
FF instance: uart_txrx/os_count[0]~FF(unreachable)
FF instance: uart_txrx/rx_count[0]~FF(unreachable)
FF instance: uart_txrx/rx_state~FF(unreachable)
FF instance: uart_txrx/count_baud[1]~FF(unreachable)
FF instance: uart_txrx/count_baud[2]~FF(unreachable)
FF instance: uart_txrx/count_baud[3]~FF(unreachable)
FF instance: uart_txrx/count_baud[4]~FF(unreachable)
FF instance: uart_txrx/count_baud[5]~FF(unreachable)
FF instance: uart_txrx/count_baud[6]~FF(unreachable)
FF instance: uart_txrx/count_baud[7]~FF(unreachable)
FF instance: uart_txrx/count_baud[8]~FF(unreachable)
FF instance: uart_txrx/count_baud[9]~FF(unreachable)
FF instance: uart_txrx/count_baud[10]~FF(unreachable)
FF instance: uart_txrx/count_baud[11]~FF(unreachable)
FF instance: uart_txrx/count_os[1]~FF(unreachable)
FF instance: uart_txrx/count_os[2]~FF(unreachable)
FF instance: uart_txrx/count_os[3]~FF(unreachable)
FF instance: uart_txrx/count_os[4]~FF(unreachable)
FF instance: uart_txrx/count_os[5]~FF(unreachable)
FF instance: uart_txrx/count_os[6]~FF(unreachable)
FF instance: uart_txrx/count_os[7]~FF(unreachable)
FF instance: uart_txrx/os_count[1]~FF(unreachable)
FF instance: uart_txrx/os_count[2]~FF(unreachable)
FF instance: uart_txrx/os_count[3]~FF(unreachable)
FF instance: uart_txrx/rx_count[1]~FF(unreachable)
FF instance: uart_txrx/rx_count[2]~FF(unreachable)
FF instance: uart_txrx/rx_count[3]~FF(unreachable)
FF instance: sw5_inst/mipi_bypass[0]~FF(unreachable)
FF instance: sw5_inst/sw_counter[0]_2~FF(unreachable)
FF instance: sw5_inst/sw_counter[1]~FF(unreachable)
FF instance: sw5_inst/sw_counter[2]~FF(unreachable)
FF instance: sw5_inst/sw_counter[3]~FF(unreachable)
FF instance: sw5_inst/sw_counter[4]~FF(unreachable)
FF instance: sw5_inst/sw_counter[5]~FF(unreachable)
FF instance: sw5_inst/sw_counter[6]~FF(unreachable)
FF instance: sw5_inst/sw_counter[7]~FF(unreachable)
FF instance: sw5_inst/sw_counter[8]~FF(unreachable)
FF instance: sw5_inst/sw_counter[9]~FF(unreachable)
FF instance: sw5_inst/sw_counter[10]~FF(unreachable)
FF instance: sw5_inst/sw_counter[11]~FF(unreachable)
FF instance: sw5_inst/sw_counter[12]~FF(unreachable)
FF instance: sw5_inst/sw_counter[13]~FF(unreachable)
FF instance: sw5_inst/sw_counter[14]~FF(unreachable)
FF instance: sw5_inst/sw_counter[15]~FF(unreachable)
### ### Sequential Elements Trimming Report (end) ### ### ### 

### ### Module Resource Usage Distribution Estimates (begin) ### ###

**Note: some resources maybe grouped under different hierarchy due to optimization and LUT mapping

Module                                                               FFs        ADDs        LUTs      RAMs DSP/MULTs
------------------------------------------------------------         ---        ----        ----      ---- ---------
mipi_loopback_top:mipi_loopback_top                                58(1)        0(0)      131(9)      0(0)      0(0)
+patgen:video_gen(syncPulse_h=80,backPorch_h=50,activeVid...      57(57)        0(0)    122(122)      0(0)      0(0)

### ### Module Resource Usage Distribution Estimates (end) ### ###

### ### Clock Load Distribution Report (begin) ### ###

        Clock     Flip-Flops   Memory Ports    Multipliers
        -----     ----------   ------------    -----------
   tx_vga_clk             57              0              0
 tx_pixel_clk              1              0              0

### ### Clock Load Distribution Report (end) ### ###

### ### EFX Flow Options (begin) ### ### ###

family : Trion
device : T85F324
project : mipi_loopback
project-xml : D:/MIPI_Loopback/mipi_loopback.xml
root : mipi_loopback_top
I : D:/MIPI_Loopback
output-dir : D:/MIPI_Loopback/outflow
work-dir : D:/MIPI_Loopback/work_syn
write-efx-verilog : D:/MIPI_Loopback/outflow/mipi_loopback.map.v
binary-db : D:/MIPI_Loopback/mipi_loopback.vdb
insert-ios : 0
max-carry-cascade : 640
max_mult : -1
max_ram : -1
mode : speed
veri_options : verilog_mode=verilog_2k,vhdl_mode=vhdl_2008

### ### EFX Flow Options (end) ### ### ###

### ### Resource Summary (begin) ### ### ### 
INPUT  PORTS    : 	126
OUTPUT PORTS    : 	118

EFX_LUT4        : 	131
   1-2  Inputs  : 	30
   3    Inputs  : 	52
   4    Inputs  : 	49
EFX_FF          : 	58
EFX_GBUFCE      : 	2
### ### Resource Summary (end) ### ### ###

Plain synthesis (without verilog dump and post-map checks) time : 1s
Elapsed synthesis time : 2s
